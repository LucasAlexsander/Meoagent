import * as _react_types_shared from '@react-types/shared';
import * as framer_motion from 'framer-motion';
import * as _nextui_org_theme from '@nextui-org/theme';
import * as react from 'react';
import * as _nextui_org_system from '@nextui-org/system';

declare const PopoverProvider: react.Provider<{
    Component: _nextui_org_system.As<any>;
    children: react.ReactNode;
    classNames: _nextui_org_theme.SlotsToClasses<"base" | "trigger" | "backdrop" | "arrow"> | undefined;
    showArrow: boolean;
    triggerRef: react.RefObject<HTMLElement>;
    placement: "center" | "top" | "bottom" | "left" | "right" | "top-start" | "top-end" | "bottom-start" | "bottom-end" | "left-start" | "left-end" | "right-start" | "right-end";
    portalContainer: Element | undefined;
    isOpen: boolean;
    onClose: () => void;
    disableAnimation: boolean;
    shouldBlockScroll: boolean;
    backdrop: "transparent" | "opaque" | "blur";
    motionProps: framer_motion.HTMLMotionProps<"div"> | undefined;
    focusProps: _react_types_shared.DOMAttributes<_react_types_shared.FocusableElement>;
    getBackdropProps: _nextui_org_system.PropGetter<Record<string, unknown>, _nextui_org_system.DOMAttributes<_nextui_org_system.DOMElement>>;
    getPopoverProps: _nextui_org_system.PropGetter<Record<string, unknown>, _nextui_org_system.DOMAttributes<_nextui_org_system.DOMElement>>;
    getTriggerProps: _nextui_org_system.PropGetter<Record<string, unknown>, _nextui_org_system.DOMAttributes<_nextui_org_system.DOMElement>>;
    getArrowProps: _nextui_org_system.PropGetter<Record<string, unknown>, _nextui_org_system.DOMAttributes<_nextui_org_system.DOMElement>>;
    getDialogProps: _nextui_org_system.PropGetter<Record<string, unknown>, _nextui_org_system.DOMAttributes<_nextui_org_system.DOMElement>>;
}>;
declare const usePopoverContext: () => {
    Component: _nextui_org_system.As<any>;
    children: react.ReactNode;
    classNames: _nextui_org_theme.SlotsToClasses<"base" | "trigger" | "backdrop" | "arrow"> | undefined;
    showArrow: boolean;
    triggerRef: react.RefObject<HTMLElement>;
    placement: "center" | "top" | "bottom" | "left" | "right" | "top-start" | "top-end" | "bottom-start" | "bottom-end" | "left-start" | "left-end" | "right-start" | "right-end";
    portalContainer: Element | undefined;
    isOpen: boolean;
    onClose: () => void;
    disableAnimation: boolean;
    shouldBlockScroll: boolean;
    backdrop: "transparent" | "opaque" | "blur";
    motionProps: framer_motion.HTMLMotionProps<"div"> | undefined;
    focusProps: _react_types_shared.DOMAttributes<_react_types_shared.FocusableElement>;
    getBackdropProps: _nextui_org_system.PropGetter<Record<string, unknown>, _nextui_org_system.DOMAttributes<_nextui_org_system.DOMElement>>;
    getPopoverProps: _nextui_org_system.PropGetter<Record<string, unknown>, _nextui_org_system.DOMAttributes<_nextui_org_system.DOMElement>>;
    getTriggerProps: _nextui_org_system.PropGetter<Record<string, unknown>, _nextui_org_system.DOMAttributes<_nextui_org_system.DOMElement>>;
    getArrowProps: _nextui_org_system.PropGetter<Record<string, unknown>, _nextui_org_system.DOMAttributes<_nextui_org_system.DOMElement>>;
    getDialogProps: _nextui_org_system.PropGetter<Record<string, unknown>, _nextui_org_system.DOMAttributes<_nextui_org_system.DOMElement>>;
};

export { PopoverProvider, usePopoverContext };
